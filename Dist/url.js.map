{"version":3,"file":"url.js","sources":["../node_modules/cesium/node_modules/url/node_modules/punycode/punycode.js","../node_modules/cesium/node_modules/querystring/decode.js","../node_modules/cesium/node_modules/querystring/encode.js","../node_modules/cesium/node_modules/querystring/index.js","../node_modules/cesium/node_modules/url/url.js"],"sourcesContent":["/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar punycode = require('punycode');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a puny coded representation of \"domain\".\n      // It only converts the part of the domain name that\n      // has non ASCII characters. I.e. it dosent matter if\n      // you call it with a domain that already is in ASCII.\n      var domainArray = this.hostname.split('.');\n      var newOut = [];\n      for (var i = 0; i < domainArray.length; ++i) {\n        var s = domainArray[i];\n        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n            'xn--' + punycode.encode(s) : s);\n      }\n      this.hostname = newOut.join('.');\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  Object.keys(this).forEach(function(k) {\n    result[k] = this[k];\n  }, this);\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    Object.keys(relative).forEach(function(k) {\n      if (k !== 'protocol')\n        result[k] = relative[k];\n    });\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      Object.keys(relative).forEach(function(k) {\n        result[k] = relative[k];\n      });\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especialy happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host) && (last === '.' || last === '..') ||\n      last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last == '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especialy happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\nfunction isString(arg) {\n  return typeof arg === \"string\";\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\nfunction isNullOrUndefined(arg) {\n  return  arg == null;\n}\n"],"names":["global","punycode","decode","encode","this","querystring","require$$0","require$$1","url"],"mappings":"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"}